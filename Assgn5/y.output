Terminals unused in grammar

    ENUMERATION_CONST
    STRUCT
    TYPEDEF
    UNION
    HASH


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | CONSTANT
    3                   | STRING_LITERALS
    4                   | LEFT_ROUND expression RIGHT_ROUND

    5 CONSTANT: INTEGER_CONST
    6         | FLOATING_CONST
    7         | CHARACTER_CONST

    8 postfix_expression: primary_expression
    9                   | postfix_expression LEFT_SQUARE expression RIGHT_SQUARE
   10                   | postfix_expression LEFT_ROUND argument_expression_list RIGHT_ROUND
   11                   | postfix_expression LEFT_ROUND RIGHT_ROUND
   12                   | postfix_expression DOT IDENTIFIER
   13                   | postfix_expression POINTER_OP IDENTIFIER
   14                   | postfix_expression INCREMENT_OP
   15                   | postfix_expression DECREMENT_OP
   16                   | LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY initializer_list COMMA RIGHT_CURLY

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 unary_expression: postfix_expression
   21                 | INCREMENT_OP unary_expression
   22                 | DECREMENT_OP unary_expression
   23                 | unary_operator cast_expression
   24                 | SIZEOF unary_expression
   25                 | SIZEOF LEFT_ROUND type_name RIGHT_ROUND

   26 unary_operator: BIT_AND
   27               | MUL
   28               | ADD
   29               | SUB
   30               | NEG
   31               | EXCL

   32 cast_expression: unary_expression
   33                | LEFT_ROUND type_name RIGHT_ROUND cast_expression

   34 multiplicative_expression: cast_expression
   35                          | multiplicative_expression MUL cast_expression
   36                          | multiplicative_expression DIV cast_expression
   37                          | multiplicative_expression MOD cast_expression

   38 additive_expression: multiplicative_expression
   39                    | additive_expression ADD multiplicative_expression
   40                    | additive_expression SUB multiplicative_expression

   41 shift_expression: additive_expression
   42                 | shift_expression LEFT_LOGICAL_OP additive_expression
   43                 | shift_expression RIGHT_LOGICAL_OP additive_expression

   44 relational_expression: shift_expression
   45                      | relational_expression LT_OP shift_expression
   46                      | relational_expression GT_OP shift_expression
   47                      | relational_expression LE_OP shift_expression
   48                      | relational_expression GE_OP shift_expression

   49 equality_expression: relational_expression
   50                    | equality_expression EQ_OP relational_expression
   51                    | equality_expression NE_OP relational_expression

   52 and_expression: equality_expression
   53               | and_expression BIT_AND equality_expression

   54 exclusive_or_expression: and_expression
   55                        | exclusive_or_expression BIT_XOR and_expression

   56 inclusive_or_expression: exclusive_or_expression
   57                        | inclusive_or_expression BIT_OR exclusive_or_expression

   58 logical_and_expression: inclusive_or_expression
   59                       | logical_and_expression N AND_LOGICAL_OP M inclusive_or_expression

   60 logical_or_expression: logical_and_expression
   61                      | logical_or_expression N OR_LOGICAL_OP M logical_and_expression

   62 M: %empty

   63 N: %empty

   64 conditional_expression: logical_or_expression
   65                       | logical_or_expression N QUES M expression N COLON M conditional_expression

   66 assignment_expression: conditional_expression
   67                      | unary_expression assignment_operator assignment_expression

   68 assignment_operator: EQUALS
   69                    | MUL_ASSIGN
   70                    | DIV_ASSIGN
   71                    | MOD_ASSIGN
   72                    | ADD_ASSIGN
   73                    | SUB_ASSIGN
   74                    | LEFT_ASSIGN
   75                    | RIGHT_ASSIGN
   76                    | AND_ASSIGN
   77                    | XOR_ASSIGN
   78                    | OR_ASSIGN

   79 expression: assignment_expression
   80           | expression COMMA assignment_expression

   81 constant_expression: conditional_expression

   82 declaration: declaration_specifiers SEMICOLON
   83            | declaration_specifiers init_declarator_list SEMICOLON

   84 declaration_specifiers: storage_class_specifier
   85                       | storage_class_specifier declaration_specifiers
   86                       | type_specifier
   87                       | type_specifier declaration_specifiers
   88                       | type_qualifier
   89                       | type_qualifier declaration_specifiers
   90                       | function_specifier
   91                       | function_specifier declaration_specifiers

   92 init_declarator_list: init_declarator
   93                     | init_declarator_list COMMA init_declarator

   94 init_declarator: declarator
   95                | declarator EQUALS initializer

   96 storage_class_specifier: EXTERN
   97                        | STATIC
   98                        | AUTO
   99                        | REGISTER

  100 type_specifier: VOID
  101               | CHAR
  102               | SHORT
  103               | INT
  104               | LONG
  105               | FLOAT
  106               | DOUBLE
  107               | SIGNED
  108               | UNSIGNED
  109               | BOOL
  110               | COMPLEX
  111               | IMAGINARY
  112               | enum_specifier

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list
  114                         | type_specifier
  115                         | type_qualifier specifier_qualifier_list
  116                         | type_qualifier

  117 enum_specifier: ENUM LEFT_CURLY enumerator_list RIGHT_CURLY
  118               | ENUM IDENTIFIER LEFT_CURLY enumerator_list RIGHT_CURLY
  119               | ENUM LEFT_CURLY enumerator_list COMMA RIGHT_CURLY
  120               | ENUM IDENTIFIER LEFT_CURLY enumerator_list COMMA RIGHT_CURLY
  121               | ENUM IDENTIFIER

  122 enumerator_list: enumerator
  123                | enumerator_list COMMA enumerator

  124 enumerator: IDENTIFIER
  125           | IDENTIFIER EQUALS constant_expression

  126 type_qualifier: CONST
  127               | VOLATILE
  128               | RESTRICT

  129 function_specifier: INLINE

  130 declarator: pointer direct_declarator
  131           | direct_declarator

  132 direct_declarator: IDENTIFIER
  133                  | LEFT_ROUND declarator RIGHT_ROUND
  134                  | direct_declarator LEFT_SQUARE type_qualifier_list assignment_expression RIGHT_SQUARE
  135                  | direct_declarator LEFT_SQUARE type_qualifier_list RIGHT_SQUARE
  136                  | direct_declarator LEFT_SQUARE assignment_expression RIGHT_SQUARE
  137                  | direct_declarator LEFT_SQUARE RIGHT_SQUARE
  138                  | direct_declarator LEFT_SQUARE type_qualifier_list MUL RIGHT_SQUARE
  139                  | direct_declarator LEFT_SQUARE STATIC type_qualifier_list assignment_expression RIGHT_SQUARE
  140                  | direct_declarator LEFT_SQUARE STATIC assignment_expression RIGHT_SQUARE
  141                  | direct_declarator LEFT_SQUARE MUL RIGHT_SQUARE
  142                  | direct_declarator LEFT_ROUND CT parameter_type_list RIGHT_ROUND
  143                  | direct_declarator LEFT_ROUND identifier_list RIGHT_ROUND
  144                  | direct_declarator LEFT_ROUND CT RIGHT_ROUND

  145 CT: %empty

  146 pointer: MUL
  147        | MUL type_qualifier_list
  148        | MUL pointer
  149        | MUL type_qualifier_list pointer

  150 type_qualifier_list: type_qualifier
  151                    | type_qualifier_list type_qualifier

  152 parameter_type_list: parameter_list
  153                    | parameter_list COMMA ELLIPSIS

  154 parameter_list: parameter_declaration
  155               | parameter_list COMMA parameter_declaration

  156 parameter_declaration: declaration_specifiers declarator
  157                      | declaration_specifiers

  158 identifier_list: IDENTIFIER
  159                | identifier_list COMMA IDENTIFIER

  160 type_name: specifier_qualifier_list

  161 initializer: assignment_expression
  162            | LEFT_CURLY initializer_list RIGHT_CURLY
  163            | LEFT_CURLY initializer_list COMMA RIGHT_CURLY

  164 initializer_list: initializer
  165                 | designation initializer
  166                 | initializer_list COMMA initializer
  167                 | initializer_list COMMA designation initializer

  168 designation: designator_list EQUALS

  169 designator_list: designator
  170                | designator_list designator

  171 designator: LEFT_SQUARE constant_expression RIGHT_SQUARE
  172           | DOT IDENTIFIER

  173 statement: labeled_statement
  174          | compound_statement
  175          | expression_statement
  176          | selection_statement
  177          | iteration_statement
  178          | jump_statement

  179 labeled_statement: IDENTIFIER COLON statement
  180                  | CASE constant_expression COLON statement
  181                  | DEFAULT COLON statement

  182 compound_statement: LEFT_CURLY RIGHT_CURLY
  183                   | LEFT_CURLY block_item_list RIGHT_CURLY

  184 block_item_list: block_item
  185                | block_item_list M block_item

  186 block_item: declaration
  187           | statement

  188 expression_statement: SEMICOLON
  189                     | expression SEMICOLON

  190 selection_statement: IF LEFT_ROUND expression N RIGHT_ROUND M statement N
  191                    | IF LEFT_ROUND expression N RIGHT_ROUND M statement N ELSE M statement
  192                    | SWITCH LEFT_ROUND expression RIGHT_ROUND statement

  193 iteration_statement: WHILE M LEFT_ROUND expression RIGHT_ROUND M statement
  194                    | DO M statement M WHILE LEFT_ROUND expression RIGHT_ROUND SEMICOLON
  195                    | FOR LEFT_ROUND expression_statement M expression_statement RIGHT_ROUND M statement
  196                    | FOR LEFT_ROUND expression_statement M expression_statement M expression N RIGHT_ROUND M statement

  197 jump_statement: GOTO IDENTIFIER SEMICOLON
  198               | CONTINUE SEMICOLON
  199               | BREAK SEMICOLON
  200               | RETURN SEMICOLON
  201               | RETURN expression SEMICOLON

  202 translation_unit: external_declaration
  203                 | translation_unit external_declaration

  204 external_declaration: function_definition
  205                     | declaration

  206 function_definition: declaration_specifiers declarator declaration_list CT compound_statement
  207                    | declaration_specifiers declarator CT compound_statement
  208                    | declarator declaration_list compound_statement
  209                    | declarator compound_statement

  210 declaration_list: declaration
  211                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <symp> (258) 1 12 13 118 120 121 124 125 132 158 159 172 179 197
    INTEGER_CONST <intval> (259) 5
    FLOATING_CONST <charval> (260) 6
    CHARACTER_CONST <charval> (261) 7
    ENUMERATION_CONST <charval> (262)
    STRING_LITERALS <charval> (263) 3
    AUTO (264) 98
    ENUM (265) 117 118 119 120 121
    RESTRICT (266) 128
    UNSIGNED (267) 108
    BREAK (268) 199
    EXTERN (269) 96
    RETURN (270) 200 201
    VOID (271) 100
    CASE (272) 180
    FLOAT (273) 105
    SHORT (274) 102
    VOLATILE (275) 127
    CHAR (276) 101
    FOR (277) 195 196
    SIGNED (278) 107
    WHILE (279) 193 194
    CONST (280) 126
    GOTO (281) 197
    SIZEOF (282) 24 25
    BOOL (283) 109
    CONTINUE (284) 198
    IF (285) 190 191
    STATIC (286) 97 139 140
    COMPLEX (287) 110
    DEFAULT (288) 181
    INLINE (289) 129
    STRUCT (290)
    IMAGINARY (291) 111
    DO (292) 194
    INT (293) 103
    SWITCH (294) 192
    DOUBLE (295) 106
    LONG (296) 104
    TYPEDEF (297)
    ELSE (298) 191
    REGISTER (299) 99
    UNION (300)
    LEFT_SQUARE (301) 9 134 135 136 137 138 139 140 141 171
    RIGHT_SQUARE (302) 9 134 135 136 137 138 139 140 141 171
    LEFT_ROUND (303) 4 10 11 16 17 25 33 133 142 143 144 190 191 192 193 194 195 196
    RIGHT_ROUND (304) 4 10 11 16 17 25 33 133 142 143 144 190 191 192 193 194 195 196
    LEFT_CURLY (305) 16 17 117 118 119 120 162 163 182 183
    RIGHT_CURLY (306) 16 17 117 118 119 120 162 163 182 183
    DOT (307) 12 172
    LE_OP (308) 47
    GE_OP (309) 48
    EQ_OP (310) 50
    NE_OP (311) 51
    AND_LOGICAL_OP (312) 59
    OR_LOGICAL_OP (313) 61
    LT_OP (314) 45
    GT_OP (315) 46
    POINTER_OP (316) 13
    INCREMENT_OP (317) 14 21
    DECREMENT_OP (318) 15 22
    LEFT_LOGICAL_OP (319) 42
    RIGHT_LOGICAL_OP (320) 43
    MUL_ASSIGN (321) 69
    DIV_ASSIGN (322) 70
    MOD_ASSIGN (323) 71
    ADD_ASSIGN (324) 72
    SUB_ASSIGN (325) 73
    LEFT_ASSIGN (326) 74
    RIGHT_ASSIGN (327) 75
    AND_ASSIGN (328) 76
    XOR_ASSIGN (329) 77
    OR_ASSIGN (330) 78
    EQUALS (331) 68 95 125 168
    ADD (332) 28 39
    SUB (333) 29 40
    MUL (334) 27 35 138 141 146 147 148 149
    NEG (335) 30
    BIT_AND (336) 26 53
    MOD (337) 37
    DIV (338) 36
    EXCL (339) 31
    BIT_XOR (340) 55
    BIT_OR (341) 57
    QUES (342) 65
    COLON (343) 65 179 180 181
    SEMICOLON (344) 82 83 188 189 194 197 198 199 200 201
    ELLIPSIS (345) 153
    COMMA (346) 17 19 80 93 119 120 123 153 155 159 163 166 167
    HASH (347)
    THEN (348)


Nonterminals, with rules where they appear

    $accept (94)
        on left: 0
    primary_expression <E> (95)
        on left: 1 2 3 4
        on right: 8
    CONSTANT <symp> (96)
        on left: 5 6 7
        on right: 2
    postfix_expression <A> (97)
        on left: 8 9 10 11 12 13 14 15 16 17
        on right: 9 10 11 12 13 14 15 20
    argument_expression_list <intval> (98)
        on left: 18 19
        on right: 10 19
    unary_expression <A> (99)
        on left: 20 21 22 23 24 25
        on right: 21 22 24 32 67
    unary_operator <unaryOperator> (100)
        on left: 26 27 28 29 30 31
        on right: 23
    cast_expression <A> (101)
        on left: 32 33
        on right: 23 33 34 35 36 37
    multiplicative_expression <E> (102)
        on left: 34 35 36 37
        on right: 35 36 37 38 39 40
    additive_expression <E> (103)
        on left: 38 39 40
        on right: 39 40 41 42 43
    shift_expression <E> (104)
        on left: 41 42 43
        on right: 42 43 44 45 46 47 48
    relational_expression <E> (105)
        on left: 44 45 46 47 48
        on right: 45 46 47 48 49 50 51
    equality_expression <E> (106)
        on left: 49 50 51
        on right: 50 51 52 53
    and_expression <E> (107)
        on left: 52 53
        on right: 53 54 55
    exclusive_or_expression <E> (108)
        on left: 54 55
        on right: 55 56 57
    inclusive_or_expression <E> (109)
        on left: 56 57
        on right: 57 58 59
    logical_and_expression <E> (110)
        on left: 58 59
        on right: 59 60 61
    logical_or_expression <E> (111)
        on left: 60 61
        on right: 61 64 65
    M <instr> (112)
        on left: 62
        on right: 59 61 65 185 190 191 193 194 195 196
    N <S> (113)
        on left: 63
        on right: 59 61 65 190 191 196
    conditional_expression <E> (114)
        on left: 64 65
        on right: 65 66 81
    assignment_expression <E> (115)
        on left: 66 67
        on right: 18 19 67 79 80 134 136 139 140 161
    assignment_operator (116)
        on left: 68 69 70 71 72 73 74 75 76 77 78
        on right: 67
    expression <E> (117)
        on left: 79 80
        on right: 4 9 65 80 189 190 191 192 193 194 196 201
    constant_expression (118)
        on left: 81
        on right: 125 171 180
    declaration (119)
        on left: 82 83
        on right: 186 205 210 211
    declaration_specifiers (120)
        on left: 84 85 86 87 88 89 90 91
        on right: 82 83 85 87 89 91 156 157 206 207
    init_declarator_list (121)
        on left: 92 93
        on right: 83 93
    init_declarator <symp> (122)
        on left: 94 95
        on right: 92 93
    storage_class_specifier (123)
        on left: 96 97 98 99
        on right: 84 85
    type_specifier (124)
        on left: 100 101 102 103 104 105 106 107 108 109 110 111 112
        on right: 86 87 113 114
    specifier_qualifier_list (125)
        on left: 113 114 115 116
        on right: 113 115 160
    enum_specifier (126)
        on left: 117 118 119 120 121
        on right: 112
    enumerator_list (127)
        on left: 122 123
        on right: 117 118 119 120 123
    enumerator (128)
        on left: 124 125
        on right: 122 123
    type_qualifier (129)
        on left: 126 127 128
        on right: 88 89 115 116 150 151
    function_specifier (130)
        on left: 129
        on right: 90 91
    declarator <symp> (131)
        on left: 130 131
        on right: 94 95 133 156 206 207 208 209
    direct_declarator <symp> (132)
        on left: 132 133 134 135 136 137 138 139 140 141 142 143 144
        on right: 130 131 134 135 136 137 138 139 140 141 142 143 144
    CT (133)
        on left: 145
        on right: 142 144 206 207
    pointer <symtp> (134)
        on left: 146 147 148 149
        on right: 130 148 149
    type_qualifier_list (135)
        on left: 150 151
        on right: 134 135 138 139 147 149 151
    parameter_type_list (136)
        on left: 152 153
        on right: 142
    parameter_list (137)
        on left: 154 155
        on right: 152 153 155
    parameter_declaration (138)
        on left: 156 157
        on right: 154 155
    identifier_list (139)
        on left: 158 159
        on right: 143 159
    type_name (140)
        on left: 160
        on right: 16 17 25 33
    initializer <symp> (141)
        on left: 161 162 163
        on right: 95 164 165 166 167
    initializer_list (142)
        on left: 164 165 166 167
        on right: 16 17 162 163 166 167
    designation (143)
        on left: 168
        on right: 165 167
    designator_list (144)
        on left: 169 170
        on right: 168 170
    designator (145)
        on left: 171 172
        on right: 169 170
    statement <S> (146)
        on left: 173 174 175 176 177 178
        on right: 179 180 181 187 190 191 192 193 194 195 196
    labeled_statement <S> (147)
        on left: 179 180 181
        on right: 173
    compound_statement <S> (148)
        on left: 182 183
        on right: 174 206 207 208 209
    block_item_list <S> (149)
        on left: 184 185
        on right: 183 185
    block_item <S> (150)
        on left: 186 187
        on right: 184 185
    expression_statement <E> (151)
        on left: 188 189
        on right: 175 195 196
    selection_statement <S> (152)
        on left: 190 191 192
        on right: 176
    iteration_statement <S> (153)
        on left: 193 194 195 196
        on right: 177
    jump_statement <S> (154)
        on left: 197 198 199 200 201
        on right: 178
    translation_unit (155)
        on left: 202 203
        on right: 0 203
    external_declaration (156)
        on left: 204 205
        on right: 202 203
    function_definition (157)
        on left: 206 207 208 209
        on right: 204
    declaration_list (158)
        on left: 210 211
        on right: 206 208 211


State 0

    0 $accept: . translation_unit $end

    IDENTIFIER  shift, and go to state 1
    AUTO        shift, and go to state 2
    ENUM        shift, and go to state 3
    RESTRICT    shift, and go to state 4
    UNSIGNED    shift, and go to state 5
    EXTERN      shift, and go to state 6
    VOID        shift, and go to state 7
    FLOAT       shift, and go to state 8
    SHORT       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    CHAR        shift, and go to state 11
    SIGNED      shift, and go to state 12
    CONST       shift, and go to state 13
    BOOL        shift, and go to state 14
    STATIC      shift, and go to state 15
    COMPLEX     shift, and go to state 16
    INLINE      shift, and go to state 17
    IMAGINARY   shift, and go to state 18
    INT         shift, and go to state 19
    DOUBLE      shift, and go to state 20
    LONG        shift, and go to state 21
    REGISTER    shift, and go to state 22
    LEFT_ROUND  shift, and go to state 23
    MUL         shift, and go to state 24

    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    declarator               go to state 32
    direct_declarator        go to state 33
    pointer                  go to state 34
    translation_unit         go to state 35
    external_declaration     go to state 36
    function_definition      go to state 37


State 1

  132 direct_declarator: IDENTIFIER .

    $default  reduce using rule 132 (direct_declarator)


State 2

   98 storage_class_specifier: AUTO .

    $default  reduce using rule 98 (storage_class_specifier)


State 3

  117 enum_specifier: ENUM . LEFT_CURLY enumerator_list RIGHT_CURLY
  118               | ENUM . IDENTIFIER LEFT_CURLY enumerator_list RIGHT_CURLY
  119               | ENUM . LEFT_CURLY enumerator_list COMMA RIGHT_CURLY
  120               | ENUM . IDENTIFIER LEFT_CURLY enumerator_list COMMA RIGHT_CURLY
  121               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 38
    LEFT_CURLY  shift, and go to state 39


State 4

  128 type_qualifier: RESTRICT .

    $default  reduce using rule 128 (type_qualifier)


State 5

  108 type_specifier: UNSIGNED .

    $default  reduce using rule 108 (type_specifier)


State 6

   96 storage_class_specifier: EXTERN .

    $default  reduce using rule 96 (storage_class_specifier)


State 7

  100 type_specifier: VOID .

    $default  reduce using rule 100 (type_specifier)


State 8

  105 type_specifier: FLOAT .

    $default  reduce using rule 105 (type_specifier)


State 9

  102 type_specifier: SHORT .

    $default  reduce using rule 102 (type_specifier)


State 10

  127 type_qualifier: VOLATILE .

    $default  reduce using rule 127 (type_qualifier)


State 11

  101 type_specifier: CHAR .

    $default  reduce using rule 101 (type_specifier)


State 12

  107 type_specifier: SIGNED .

    $default  reduce using rule 107 (type_specifier)


State 13

  126 type_qualifier: CONST .

    $default  reduce using rule 126 (type_qualifier)


State 14

  109 type_specifier: BOOL .

    $default  reduce using rule 109 (type_specifier)


State 15

   97 storage_class_specifier: STATIC .

    $default  reduce using rule 97 (storage_class_specifier)


State 16

  110 type_specifier: COMPLEX .

    $default  reduce using rule 110 (type_specifier)


State 17

  129 function_specifier: INLINE .

    $default  reduce using rule 129 (function_specifier)


State 18

  111 type_specifier: IMAGINARY .

    $default  reduce using rule 111 (type_specifier)


State 19

  103 type_specifier: INT .

    $default  reduce using rule 103 (type_specifier)


State 20

  106 type_specifier: DOUBLE .

    $default  reduce using rule 106 (type_specifier)


State 21

  104 type_specifier: LONG .

    $default  reduce using rule 104 (type_specifier)


State 22

   99 storage_class_specifier: REGISTER .

    $default  reduce using rule 99 (storage_class_specifier)


State 23

  133 direct_declarator: LEFT_ROUND . declarator RIGHT_ROUND

    IDENTIFIER  shift, and go to state 1
    LEFT_ROUND  shift, and go to state 23
    MUL         shift, and go to state 24

    declarator         go to state 40
    direct_declarator  go to state 33
    pointer            go to state 34


State 24

  146 pointer: MUL .
  147        | MUL . type_qualifier_list
  148        | MUL . pointer
  149        | MUL . type_qualifier_list pointer

    RESTRICT  shift, and go to state 4
    VOLATILE  shift, and go to state 10
    CONST     shift, and go to state 13
    MUL       shift, and go to state 24

    $default  reduce using rule 146 (pointer)

    type_qualifier       go to state 41
    pointer              go to state 42
    type_qualifier_list  go to state 43


State 25

  205 external_declaration: declaration .

    $default  reduce using rule 205 (external_declaration)


State 26

   82 declaration: declaration_specifiers . SEMICOLON
   83            | declaration_specifiers . init_declarator_list SEMICOLON
  206 function_definition: declaration_specifiers . declarator declaration_list CT compound_statement
  207                    | declaration_specifiers . declarator CT compound_statement

    IDENTIFIER  shift, and go to state 1
    LEFT_ROUND  shift, and go to state 23
    MUL         shift, and go to state 24
    SEMICOLON   shift, and go to state 44

    init_declarator_list  go to state 45
    init_declarator       go to state 46
    declarator            go to state 47
    direct_declarator     go to state 33
    pointer               go to state 34


State 27

   84 declaration_specifiers: storage_class_specifier .
   85                       | storage_class_specifier . declaration_specifiers

    AUTO       shift, and go to state 2
    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    EXTERN     shift, and go to state 6
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    STATIC     shift, and go to state 15
    COMPLEX    shift, and go to state 16
    INLINE     shift, and go to state 17
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21
    REGISTER   shift, and go to state 22

    $default  reduce using rule 84 (declaration_specifiers)

    declaration_specifiers   go to state 48
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 28

   86 declaration_specifiers: type_specifier .
   87                       | type_specifier . declaration_specifiers

    AUTO       shift, and go to state 2
    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    EXTERN     shift, and go to state 6
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    STATIC     shift, and go to state 15
    COMPLEX    shift, and go to state 16
    INLINE     shift, and go to state 17
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21
    REGISTER   shift, and go to state 22

    $default  reduce using rule 86 (declaration_specifiers)

    declaration_specifiers   go to state 49
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 29

  112 type_specifier: enum_specifier .

    $default  reduce using rule 112 (type_specifier)


State 30

   88 declaration_specifiers: type_qualifier .
   89                       | type_qualifier . declaration_specifiers

    AUTO       shift, and go to state 2
    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    EXTERN     shift, and go to state 6
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    STATIC     shift, and go to state 15
    COMPLEX    shift, and go to state 16
    INLINE     shift, and go to state 17
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21
    REGISTER   shift, and go to state 22

    $default  reduce using rule 88 (declaration_specifiers)

    declaration_specifiers   go to state 50
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 31

   90 declaration_specifiers: function_specifier .
   91                       | function_specifier . declaration_specifiers

    AUTO       shift, and go to state 2
    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    EXTERN     shift, and go to state 6
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    STATIC     shift, and go to state 15
    COMPLEX    shift, and go to state 16
    INLINE     shift, and go to state 17
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21
    REGISTER   shift, and go to state 22

    $default  reduce using rule 90 (declaration_specifiers)

    declaration_specifiers   go to state 51
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 32

  208 function_definition: declarator . declaration_list compound_statement
  209                    | declarator . compound_statement

    AUTO        shift, and go to state 2
    ENUM        shift, and go to state 3
    RESTRICT    shift, and go to state 4
    UNSIGNED    shift, and go to state 5
    EXTERN      shift, and go to state 6
    VOID        shift, and go to state 7
    FLOAT       shift, and go to state 8
    SHORT       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    CHAR        shift, and go to state 11
    SIGNED      shift, and go to state 12
    CONST       shift, and go to state 13
    BOOL        shift, and go to state 14
    STATIC      shift, and go to state 15
    COMPLEX     shift, and go to state 16
    INLINE      shift, and go to state 17
    IMAGINARY   shift, and go to state 18
    INT         shift, and go to state 19
    DOUBLE      shift, and go to state 20
    LONG        shift, and go to state 21
    REGISTER    shift, and go to state 22
    LEFT_CURLY  shift, and go to state 52

    declaration              go to state 53
    declaration_specifiers   go to state 54
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    compound_statement       go to state 55
    declaration_list         go to state 56


State 33

  131 declarator: direct_declarator .
  134 direct_declarator: direct_declarator . LEFT_SQUARE type_qualifier_list assignment_expression RIGHT_SQUARE
  135                  | direct_declarator . LEFT_SQUARE type_qualifier_list RIGHT_SQUARE
  136                  | direct_declarator . LEFT_SQUARE assignment_expression RIGHT_SQUARE
  137                  | direct_declarator . LEFT_SQUARE RIGHT_SQUARE
  138                  | direct_declarator . LEFT_SQUARE type_qualifier_list MUL RIGHT_SQUARE
  139                  | direct_declarator . LEFT_SQUARE STATIC type_qualifier_list assignment_expression RIGHT_SQUARE
  140                  | direct_declarator . LEFT_SQUARE STATIC assignment_expression RIGHT_SQUARE
  141                  | direct_declarator . LEFT_SQUARE MUL RIGHT_SQUARE
  142                  | direct_declarator . LEFT_ROUND CT parameter_type_list RIGHT_ROUND
  143                  | direct_declarator . LEFT_ROUND identifier_list RIGHT_ROUND
  144                  | direct_declarator . LEFT_ROUND CT RIGHT_ROUND

    LEFT_SQUARE  shift, and go to state 57
    LEFT_ROUND   shift, and go to state 58

    $default  reduce using rule 131 (declarator)


State 34

  130 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 1
    LEFT_ROUND  shift, and go to state 23

    direct_declarator  go to state 59


State 35

    0 $accept: translation_unit . $end
  203 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 60
    IDENTIFIER  shift, and go to state 1
    AUTO        shift, and go to state 2
    ENUM        shift, and go to state 3
    RESTRICT    shift, and go to state 4
    UNSIGNED    shift, and go to state 5
    EXTERN      shift, and go to state 6
    VOID        shift, and go to state 7
    FLOAT       shift, and go to state 8
    SHORT       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    CHAR        shift, and go to state 11
    SIGNED      shift, and go to state 12
    CONST       shift, and go to state 13
    BOOL        shift, and go to state 14
    STATIC      shift, and go to state 15
    COMPLEX     shift, and go to state 16
    INLINE      shift, and go to state 17
    IMAGINARY   shift, and go to state 18
    INT         shift, and go to state 19
    DOUBLE      shift, and go to state 20
    LONG        shift, and go to state 21
    REGISTER    shift, and go to state 22
    LEFT_ROUND  shift, and go to state 23
    MUL         shift, and go to state 24

    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    declarator               go to state 32
    direct_declarator        go to state 33
    pointer                  go to state 34
    external_declaration     go to state 61
    function_definition      go to state 37


State 36

  202 translation_unit: external_declaration .

    $default  reduce using rule 202 (translation_unit)


State 37

  204 external_declaration: function_definition .

    $default  reduce using rule 204 (external_declaration)


State 38

  118 enum_specifier: ENUM IDENTIFIER . LEFT_CURLY enumerator_list RIGHT_CURLY
  120               | ENUM IDENTIFIER . LEFT_CURLY enumerator_list COMMA RIGHT_CURLY
  121               | ENUM IDENTIFIER .

    LEFT_CURLY  shift, and go to state 62

    $default  reduce using rule 121 (enum_specifier)


State 39

  117 enum_specifier: ENUM LEFT_CURLY . enumerator_list RIGHT_CURLY
  119               | ENUM LEFT_CURLY . enumerator_list COMMA RIGHT_CURLY

    IDENTIFIER  shift, and go to state 63

    enumerator_list  go to state 64
    enumerator       go to state 65


State 40

  133 direct_declarator: LEFT_ROUND declarator . RIGHT_ROUND

    RIGHT_ROUND  shift, and go to state 66


State 41

  150 type_qualifier_list: type_qualifier .

    $default  reduce using rule 150 (type_qualifier_list)


State 42

  148 pointer: MUL pointer .

    $default  reduce using rule 148 (pointer)


State 43

  147 pointer: MUL type_qualifier_list .
  149        | MUL type_qualifier_list . pointer
  151 type_qualifier_list: type_qualifier_list . type_qualifier

    RESTRICT  shift, and go to state 4
    VOLATILE  shift, and go to state 10
    CONST     shift, and go to state 13
    MUL       shift, and go to state 24

    $default  reduce using rule 147 (pointer)

    type_qualifier  go to state 67
    pointer         go to state 68


State 44

   82 declaration: declaration_specifiers SEMICOLON .

    $default  reduce using rule 82 (declaration)


State 45

   83 declaration: declaration_specifiers init_declarator_list . SEMICOLON
   93 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 69
    COMMA      shift, and go to state 70


State 46

   92 init_declarator_list: init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 47

   94 init_declarator: declarator .
   95                | declarator . EQUALS initializer
  206 function_definition: declaration_specifiers declarator . declaration_list CT compound_statement
  207                    | declaration_specifiers declarator . CT compound_statement

    AUTO       shift, and go to state 2
    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    EXTERN     shift, and go to state 6
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    STATIC     shift, and go to state 15
    COMPLEX    shift, and go to state 16
    INLINE     shift, and go to state 17
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21
    REGISTER   shift, and go to state 22
    EQUALS     shift, and go to state 71

    LEFT_CURLY  reduce using rule 145 (CT)
    $default    reduce using rule 94 (init_declarator)

    declaration              go to state 53
    declaration_specifiers   go to state 54
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    CT                       go to state 72
    declaration_list         go to state 73


State 48

   85 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 85 (declaration_specifiers)


State 49

   87 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 87 (declaration_specifiers)


State 50

   89 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers)


State 51

   91 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 91 (declaration_specifiers)


State 52

  182 compound_statement: LEFT_CURLY . RIGHT_CURLY
  183                   | LEFT_CURLY . block_item_list RIGHT_CURLY

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    AUTO             shift, and go to state 2
    ENUM             shift, and go to state 3
    RESTRICT         shift, and go to state 4
    UNSIGNED         shift, and go to state 5
    BREAK            shift, and go to state 79
    EXTERN           shift, and go to state 6
    RETURN           shift, and go to state 80
    VOID             shift, and go to state 7
    CASE             shift, and go to state 81
    FLOAT            shift, and go to state 8
    SHORT            shift, and go to state 9
    VOLATILE         shift, and go to state 10
    CHAR             shift, and go to state 11
    FOR              shift, and go to state 82
    SIGNED           shift, and go to state 12
    WHILE            shift, and go to state 83
    CONST            shift, and go to state 13
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    BOOL             shift, and go to state 14
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    STATIC           shift, and go to state 15
    COMPLEX          shift, and go to state 16
    DEFAULT          shift, and go to state 88
    INLINE           shift, and go to state 17
    IMAGINARY        shift, and go to state 18
    DO               shift, and go to state 89
    INT              shift, and go to state 19
    SWITCH           shift, and go to state 90
    DOUBLE           shift, and go to state 20
    LONG             shift, and go to state 21
    REGISTER         shift, and go to state 22
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    RIGHT_CURLY      shift, and go to state 92
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    declaration                go to state 121
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    statement                  go to state 122
    labeled_statement          go to state 123
    compound_statement         go to state 124
    block_item_list            go to state 125
    block_item                 go to state 126
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 53

  210 declaration_list: declaration .

    $default  reduce using rule 210 (declaration_list)


State 54

   82 declaration: declaration_specifiers . SEMICOLON
   83            | declaration_specifiers . init_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 1
    LEFT_ROUND  shift, and go to state 23
    MUL         shift, and go to state 24
    SEMICOLON   shift, and go to state 44

    init_declarator_list  go to state 45
    init_declarator       go to state 46
    declarator            go to state 131
    direct_declarator     go to state 33
    pointer               go to state 34


State 55

  209 function_definition: declarator compound_statement .

    $default  reduce using rule 209 (function_definition)


State 56

  208 function_definition: declarator declaration_list . compound_statement
  211 declaration_list: declaration_list . declaration

    AUTO        shift, and go to state 2
    ENUM        shift, and go to state 3
    RESTRICT    shift, and go to state 4
    UNSIGNED    shift, and go to state 5
    EXTERN      shift, and go to state 6
    VOID        shift, and go to state 7
    FLOAT       shift, and go to state 8
    SHORT       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    CHAR        shift, and go to state 11
    SIGNED      shift, and go to state 12
    CONST       shift, and go to state 13
    BOOL        shift, and go to state 14
    STATIC      shift, and go to state 15
    COMPLEX     shift, and go to state 16
    INLINE      shift, and go to state 17
    IMAGINARY   shift, and go to state 18
    INT         shift, and go to state 19
    DOUBLE      shift, and go to state 20
    LONG        shift, and go to state 21
    REGISTER    shift, and go to state 22
    LEFT_CURLY  shift, and go to state 52

    declaration              go to state 132
    declaration_specifiers   go to state 54
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    compound_statement       go to state 133


State 57

  134 direct_declarator: direct_declarator LEFT_SQUARE . type_qualifier_list assignment_expression RIGHT_SQUARE
  135                  | direct_declarator LEFT_SQUARE . type_qualifier_list RIGHT_SQUARE
  136                  | direct_declarator LEFT_SQUARE . assignment_expression RIGHT_SQUARE
  137                  | direct_declarator LEFT_SQUARE . RIGHT_SQUARE
  138                  | direct_declarator LEFT_SQUARE . type_qualifier_list MUL RIGHT_SQUARE
  139                  | direct_declarator LEFT_SQUARE . STATIC type_qualifier_list assignment_expression RIGHT_SQUARE
  140                  | direct_declarator LEFT_SQUARE . STATIC assignment_expression RIGHT_SQUARE
  141                  | direct_declarator LEFT_SQUARE . MUL RIGHT_SQUARE

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    RESTRICT         shift, and go to state 4
    VOLATILE         shift, and go to state 10
    CONST            shift, and go to state 13
    SIZEOF           shift, and go to state 85
    STATIC           shift, and go to state 135
    RIGHT_SQUARE     shift, and go to state 136
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 137
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 138
    type_qualifier             go to state 41
    type_qualifier_list        go to state 139


State 58

  142 direct_declarator: direct_declarator LEFT_ROUND . CT parameter_type_list RIGHT_ROUND
  143                  | direct_declarator LEFT_ROUND . identifier_list RIGHT_ROUND
  144                  | direct_declarator LEFT_ROUND . CT RIGHT_ROUND

    IDENTIFIER  shift, and go to state 140

    $default  reduce using rule 145 (CT)

    CT               go to state 141
    identifier_list  go to state 142


State 59

  130 declarator: pointer direct_declarator .
  134 direct_declarator: direct_declarator . LEFT_SQUARE type_qualifier_list assignment_expression RIGHT_SQUARE
  135                  | direct_declarator . LEFT_SQUARE type_qualifier_list RIGHT_SQUARE
  136                  | direct_declarator . LEFT_SQUARE assignment_expression RIGHT_SQUARE
  137                  | direct_declarator . LEFT_SQUARE RIGHT_SQUARE
  138                  | direct_declarator . LEFT_SQUARE type_qualifier_list MUL RIGHT_SQUARE
  139                  | direct_declarator . LEFT_SQUARE STATIC type_qualifier_list assignment_expression RIGHT_SQUARE
  140                  | direct_declarator . LEFT_SQUARE STATIC assignment_expression RIGHT_SQUARE
  141                  | direct_declarator . LEFT_SQUARE MUL RIGHT_SQUARE
  142                  | direct_declarator . LEFT_ROUND CT parameter_type_list RIGHT_ROUND
  143                  | direct_declarator . LEFT_ROUND identifier_list RIGHT_ROUND
  144                  | direct_declarator . LEFT_ROUND CT RIGHT_ROUND

    LEFT_SQUARE  shift, and go to state 57
    LEFT_ROUND   shift, and go to state 58

    $default  reduce using rule 130 (declarator)


State 60

    0 $accept: translation_unit $end .

    $default  accept


State 61

  203 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 203 (translation_unit)


State 62

  118 enum_specifier: ENUM IDENTIFIER LEFT_CURLY . enumerator_list RIGHT_CURLY
  120               | ENUM IDENTIFIER LEFT_CURLY . enumerator_list COMMA RIGHT_CURLY

    IDENTIFIER  shift, and go to state 63

    enumerator_list  go to state 143
    enumerator       go to state 65


State 63

  124 enumerator: IDENTIFIER .
  125           | IDENTIFIER . EQUALS constant_expression

    EQUALS  shift, and go to state 144

    $default  reduce using rule 124 (enumerator)


State 64

  117 enum_specifier: ENUM LEFT_CURLY enumerator_list . RIGHT_CURLY
  119               | ENUM LEFT_CURLY enumerator_list . COMMA RIGHT_CURLY
  123 enumerator_list: enumerator_list . COMMA enumerator

    RIGHT_CURLY  shift, and go to state 145
    COMMA        shift, and go to state 146


State 65

  122 enumerator_list: enumerator .

    $default  reduce using rule 122 (enumerator_list)


State 66

  133 direct_declarator: LEFT_ROUND declarator RIGHT_ROUND .

    $default  reduce using rule 133 (direct_declarator)


State 67

  151 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 151 (type_qualifier_list)


State 68

  149 pointer: MUL type_qualifier_list pointer .

    $default  reduce using rule 149 (pointer)


State 69

   83 declaration: declaration_specifiers init_declarator_list SEMICOLON .

    $default  reduce using rule 83 (declaration)


State 70

   93 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER  shift, and go to state 1
    LEFT_ROUND  shift, and go to state 23
    MUL         shift, and go to state 24

    init_declarator    go to state 147
    declarator         go to state 131
    direct_declarator  go to state 33
    pointer            go to state 34


State 71

   95 init_declarator: declarator EQUALS . initializer

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 148
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 149
    initializer                go to state 150


State 72

  207 function_definition: declaration_specifiers declarator CT . compound_statement

    LEFT_CURLY  shift, and go to state 52

    compound_statement  go to state 151


State 73

  206 function_definition: declaration_specifiers declarator declaration_list . CT compound_statement
  211 declaration_list: declaration_list . declaration

    AUTO       shift, and go to state 2
    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    EXTERN     shift, and go to state 6
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    STATIC     shift, and go to state 15
    COMPLEX    shift, and go to state 16
    INLINE     shift, and go to state 17
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21
    REGISTER   shift, and go to state 22

    $default  reduce using rule 145 (CT)

    declaration              go to state 132
    declaration_specifiers   go to state 54
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    CT                       go to state 152


State 74

    1 primary_expression: IDENTIFIER .
  179 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 153

    $default  reduce using rule 1 (primary_expression)


State 75

    5 CONSTANT: INTEGER_CONST .

    $default  reduce using rule 5 (CONSTANT)


State 76

    6 CONSTANT: FLOATING_CONST .

    $default  reduce using rule 6 (CONSTANT)


State 77

    7 CONSTANT: CHARACTER_CONST .

    $default  reduce using rule 7 (CONSTANT)


State 78

    3 primary_expression: STRING_LITERALS .

    $default  reduce using rule 3 (primary_expression)


State 79

  199 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 154


State 80

  200 jump_statement: RETURN . SEMICOLON
  201               | RETURN . expression SEMICOLON

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 155

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 156


State 81

  180 labeled_statement: CASE . constant_expression COLON statement

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 158
    constant_expression        go to state 159


State 82

  195 iteration_statement: FOR . LEFT_ROUND expression_statement M expression_statement RIGHT_ROUND M statement
  196                    | FOR . LEFT_ROUND expression_statement M expression_statement M expression N RIGHT_ROUND M statement

    LEFT_ROUND  shift, and go to state 160


State 83

  193 iteration_statement: WHILE . M LEFT_ROUND expression RIGHT_ROUND M statement

    $default  reduce using rule 62 (M)

    M  go to state 161


State 84

  197 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 162


State 85

   24 unary_expression: SIZEOF . unary_expression
   25                 | SIZEOF . LEFT_ROUND type_name RIGHT_ROUND

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 163
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression  go to state 102
    CONSTANT            go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 164
    unary_operator      go to state 106


State 86

  198 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 165


State 87

  190 selection_statement: IF . LEFT_ROUND expression N RIGHT_ROUND M statement N
  191                    | IF . LEFT_ROUND expression N RIGHT_ROUND M statement N ELSE M statement

    LEFT_ROUND  shift, and go to state 166


State 88

  181 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 167


State 89

  194 iteration_statement: DO . M statement M WHILE LEFT_ROUND expression RIGHT_ROUND SEMICOLON

    $default  reduce using rule 62 (M)

    M  go to state 168


State 90

  192 selection_statement: SWITCH . LEFT_ROUND expression RIGHT_ROUND statement

    LEFT_ROUND  shift, and go to state 169


State 91

    4 primary_expression: LEFT_ROUND . expression RIGHT_ROUND
   16 postfix_expression: LEFT_ROUND . type_name RIGHT_ROUND LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND . type_name RIGHT_ROUND LEFT_CURLY initializer_list COMMA RIGHT_CURLY
   33 cast_expression: LEFT_ROUND . type_name RIGHT_ROUND cast_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    ENUM             shift, and go to state 3
    RESTRICT         shift, and go to state 4
    UNSIGNED         shift, and go to state 5
    VOID             shift, and go to state 7
    FLOAT            shift, and go to state 8
    SHORT            shift, and go to state 9
    VOLATILE         shift, and go to state 10
    CHAR             shift, and go to state 11
    SIGNED           shift, and go to state 12
    CONST            shift, and go to state 13
    SIZEOF           shift, and go to state 85
    BOOL             shift, and go to state 14
    COMPLEX          shift, and go to state 16
    IMAGINARY        shift, and go to state 18
    INT              shift, and go to state 19
    DOUBLE           shift, and go to state 20
    LONG             shift, and go to state 21
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 170
    type_specifier             go to state 171
    specifier_qualifier_list   go to state 172
    enum_specifier             go to state 29
    type_qualifier             go to state 173
    type_name                  go to state 174


State 92

  182 compound_statement: LEFT_CURLY RIGHT_CURLY .

    $default  reduce using rule 182 (compound_statement)


State 93

   21 unary_expression: INCREMENT_OP . unary_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 175
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression  go to state 102
    CONSTANT            go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 176
    unary_operator      go to state 106


State 94

   22 unary_expression: DECREMENT_OP . unary_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 175
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression  go to state 102
    CONSTANT            go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 177
    unary_operator      go to state 106


State 95

   28 unary_operator: ADD .

    $default  reduce using rule 28 (unary_operator)


State 96

   29 unary_operator: SUB .

    $default  reduce using rule 29 (unary_operator)


State 97

   27 unary_operator: MUL .

    $default  reduce using rule 27 (unary_operator)


State 98

   30 unary_operator: NEG .

    $default  reduce using rule 30 (unary_operator)


State 99

   26 unary_operator: BIT_AND .

    $default  reduce using rule 26 (unary_operator)


State 100

   31 unary_operator: EXCL .

    $default  reduce using rule 31 (unary_operator)


State 101

  188 expression_statement: SEMICOLON .

    $default  reduce using rule 188 (expression_statement)


State 102

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


State 103

    2 primary_expression: CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 104

    9 postfix_expression: postfix_expression . LEFT_SQUARE expression RIGHT_SQUARE
   10                   | postfix_expression . LEFT_ROUND argument_expression_list RIGHT_ROUND
   11                   | postfix_expression . LEFT_ROUND RIGHT_ROUND
   12                   | postfix_expression . DOT IDENTIFIER
   13                   | postfix_expression . POINTER_OP IDENTIFIER
   14                   | postfix_expression . INCREMENT_OP
   15                   | postfix_expression . DECREMENT_OP
   20 unary_expression: postfix_expression .

    LEFT_SQUARE   shift, and go to state 178
    LEFT_ROUND    shift, and go to state 179
    DOT           shift, and go to state 180
    POINTER_OP    shift, and go to state 181
    INCREMENT_OP  shift, and go to state 182
    DECREMENT_OP  shift, and go to state 183

    $default  reduce using rule 20 (unary_expression)


State 105

   32 cast_expression: unary_expression .
   67 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN    shift, and go to state 184
    DIV_ASSIGN    shift, and go to state 185
    MOD_ASSIGN    shift, and go to state 186
    ADD_ASSIGN    shift, and go to state 187
    SUB_ASSIGN    shift, and go to state 188
    LEFT_ASSIGN   shift, and go to state 189
    RIGHT_ASSIGN  shift, and go to state 190
    AND_ASSIGN    shift, and go to state 191
    XOR_ASSIGN    shift, and go to state 192
    OR_ASSIGN     shift, and go to state 193
    EQUALS        shift, and go to state 194

    $default  reduce using rule 32 (cast_expression)

    assignment_operator  go to state 195


State 106

   23 unary_expression: unary_operator . cast_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression  go to state 102
    CONSTANT            go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 157
    unary_operator      go to state 106
    cast_expression     go to state 196


State 107

   34 multiplicative_expression: cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 108

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIV cast_expression
   37                          | multiplicative_expression . MOD cast_expression
   38 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 197
    MOD  shift, and go to state 198
    DIV  shift, and go to state 199

    $default  reduce using rule 38 (additive_expression)


State 109

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . SUB multiplicative_expression
   41 shift_expression: additive_expression .

    ADD  shift, and go to state 200
    SUB  shift, and go to state 201

    $default  reduce using rule 41 (shift_expression)


State 110

   42 shift_expression: shift_expression . LEFT_LOGICAL_OP additive_expression
   43                 | shift_expression . RIGHT_LOGICAL_OP additive_expression
   44 relational_expression: shift_expression .

    LEFT_LOGICAL_OP   shift, and go to state 202
    RIGHT_LOGICAL_OP  shift, and go to state 203

    $default  reduce using rule 44 (relational_expression)


State 111

   45 relational_expression: relational_expression . LT_OP shift_expression
   46                      | relational_expression . GT_OP shift_expression
   47                      | relational_expression . LE_OP shift_expression
   48                      | relational_expression . GE_OP shift_expression
   49 equality_expression: relational_expression .

    LE_OP  shift, and go to state 204
    GE_OP  shift, and go to state 205
    LT_OP  shift, and go to state 206
    GT_OP  shift, and go to state 207

    $default  reduce using rule 49 (equality_expression)


State 112

   50 equality_expression: equality_expression . EQ_OP relational_expression
   51                    | equality_expression . NE_OP relational_expression
   52 and_expression: equality_expression .

    EQ_OP  shift, and go to state 208
    NE_OP  shift, and go to state 209

    $default  reduce using rule 52 (and_expression)


State 113

   53 and_expression: and_expression . BIT_AND equality_expression
   54 exclusive_or_expression: and_expression .

    BIT_AND  shift, and go to state 210

    $default  reduce using rule 54 (exclusive_or_expression)


State 114

   55 exclusive_or_expression: exclusive_or_expression . BIT_XOR and_expression
   56 inclusive_or_expression: exclusive_or_expression .

    BIT_XOR  shift, and go to state 211

    $default  reduce using rule 56 (inclusive_or_expression)


State 115

   57 inclusive_or_expression: inclusive_or_expression . BIT_OR exclusive_or_expression
   58 logical_and_expression: inclusive_or_expression .

    BIT_OR  shift, and go to state 212

    $default  reduce using rule 58 (logical_and_expression)


State 116

   59 logical_and_expression: logical_and_expression . N AND_LOGICAL_OP M inclusive_or_expression
   60 logical_or_expression: logical_and_expression .

    AND_LOGICAL_OP  reduce using rule 63 (N)
    $default        reduce using rule 60 (logical_or_expression)

    N  go to state 213


State 117

   61 logical_or_expression: logical_or_expression . N OR_LOGICAL_OP M logical_and_expression
   64 conditional_expression: logical_or_expression .
   65                       | logical_or_expression . N QUES M expression N COLON M conditional_expression

    OR_LOGICAL_OP  reduce using rule 63 (N)
    QUES           reduce using rule 63 (N)
    $default       reduce using rule 64 (conditional_expression)

    N  go to state 214


State 118

   66 assignment_expression: conditional_expression .

    $default  reduce using rule 66 (assignment_expression)


State 119

   79 expression: assignment_expression .

    $default  reduce using rule 79 (expression)


State 120

   80 expression: expression . COMMA assignment_expression
  189 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 215
    COMMA      shift, and go to state 216


State 121

  186 block_item: declaration .

    $default  reduce using rule 186 (block_item)


State 122

  187 block_item: statement .

    $default  reduce using rule 187 (block_item)


State 123

  173 statement: labeled_statement .

    $default  reduce using rule 173 (statement)


State 124

  174 statement: compound_statement .

    $default  reduce using rule 174 (statement)


State 125

  183 compound_statement: LEFT_CURLY block_item_list . RIGHT_CURLY
  185 block_item_list: block_item_list . M block_item

    RIGHT_CURLY  shift, and go to state 217

    $default  reduce using rule 62 (M)

    M  go to state 218


State 126

  184 block_item_list: block_item .

    $default  reduce using rule 184 (block_item_list)


State 127

  175 statement: expression_statement .

    $default  reduce using rule 175 (statement)


State 128

  176 statement: selection_statement .

    $default  reduce using rule 176 (statement)


State 129

  177 statement: iteration_statement .

    $default  reduce using rule 177 (statement)


State 130

  178 statement: jump_statement .

    $default  reduce using rule 178 (statement)


State 131

   94 init_declarator: declarator .
   95                | declarator . EQUALS initializer

    EQUALS  shift, and go to state 71

    $default  reduce using rule 94 (init_declarator)


State 132

  211 declaration_list: declaration_list declaration .

    $default  reduce using rule 211 (declaration_list)


State 133

  208 function_definition: declarator declaration_list compound_statement .

    $default  reduce using rule 208 (function_definition)


State 134

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 135

  139 direct_declarator: direct_declarator LEFT_SQUARE STATIC . type_qualifier_list assignment_expression RIGHT_SQUARE
  140                  | direct_declarator LEFT_SQUARE STATIC . assignment_expression RIGHT_SQUARE

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    RESTRICT         shift, and go to state 4
    VOLATILE         shift, and go to state 10
    CONST            shift, and go to state 13
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 219
    type_qualifier             go to state 41
    type_qualifier_list        go to state 220


State 136

  137 direct_declarator: direct_declarator LEFT_SQUARE RIGHT_SQUARE .

    $default  reduce using rule 137 (direct_declarator)


State 137

   27 unary_operator: MUL .
  141 direct_declarator: direct_declarator LEFT_SQUARE MUL . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 221

    $default  reduce using rule 27 (unary_operator)


State 138

  136 direct_declarator: direct_declarator LEFT_SQUARE assignment_expression . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 222


State 139

  134 direct_declarator: direct_declarator LEFT_SQUARE type_qualifier_list . assignment_expression RIGHT_SQUARE
  135                  | direct_declarator LEFT_SQUARE type_qualifier_list . RIGHT_SQUARE
  138                  | direct_declarator LEFT_SQUARE type_qualifier_list . MUL RIGHT_SQUARE
  151 type_qualifier_list: type_qualifier_list . type_qualifier

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    RESTRICT         shift, and go to state 4
    VOLATILE         shift, and go to state 10
    CONST            shift, and go to state 13
    SIZEOF           shift, and go to state 85
    RIGHT_SQUARE     shift, and go to state 223
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 224
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 225
    type_qualifier             go to state 67


State 140

  158 identifier_list: IDENTIFIER .

    $default  reduce using rule 158 (identifier_list)


State 141

  142 direct_declarator: direct_declarator LEFT_ROUND CT . parameter_type_list RIGHT_ROUND
  144                  | direct_declarator LEFT_ROUND CT . RIGHT_ROUND

    AUTO         shift, and go to state 2
    ENUM         shift, and go to state 3
    RESTRICT     shift, and go to state 4
    UNSIGNED     shift, and go to state 5
    EXTERN       shift, and go to state 6
    VOID         shift, and go to state 7
    FLOAT        shift, and go to state 8
    SHORT        shift, and go to state 9
    VOLATILE     shift, and go to state 10
    CHAR         shift, and go to state 11
    SIGNED       shift, and go to state 12
    CONST        shift, and go to state 13
    BOOL         shift, and go to state 14
    STATIC       shift, and go to state 15
    COMPLEX      shift, and go to state 16
    INLINE       shift, and go to state 17
    IMAGINARY    shift, and go to state 18
    INT          shift, and go to state 19
    DOUBLE       shift, and go to state 20
    LONG         shift, and go to state 21
    REGISTER     shift, and go to state 22
    RIGHT_ROUND  shift, and go to state 226

    declaration_specifiers   go to state 227
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_type_list      go to state 228
    parameter_list           go to state 229
    parameter_declaration    go to state 230


State 142

  143 direct_declarator: direct_declarator LEFT_ROUND identifier_list . RIGHT_ROUND
  159 identifier_list: identifier_list . COMMA IDENTIFIER

    RIGHT_ROUND  shift, and go to state 231
    COMMA        shift, and go to state 232


State 143

  118 enum_specifier: ENUM IDENTIFIER LEFT_CURLY enumerator_list . RIGHT_CURLY
  120               | ENUM IDENTIFIER LEFT_CURLY enumerator_list . COMMA RIGHT_CURLY
  123 enumerator_list: enumerator_list . COMMA enumerator

    RIGHT_CURLY  shift, and go to state 233
    COMMA        shift, and go to state 234


State 144

  125 enumerator: IDENTIFIER EQUALS . constant_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 158
    constant_expression        go to state 235


State 145

  117 enum_specifier: ENUM LEFT_CURLY enumerator_list RIGHT_CURLY .

    $default  reduce using rule 117 (enum_specifier)


State 146

  119 enum_specifier: ENUM LEFT_CURLY enumerator_list COMMA . RIGHT_CURLY
  123 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER   shift, and go to state 63
    RIGHT_CURLY  shift, and go to state 236

    enumerator  go to state 237


State 147

   93 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 93 (init_declarator_list)


State 148

  162 initializer: LEFT_CURLY . initializer_list RIGHT_CURLY
  163            | LEFT_CURLY . initializer_list COMMA RIGHT_CURLY

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_SQUARE      shift, and go to state 238
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 148
    DOT              shift, and go to state 239
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 149
    initializer                go to state 240
    initializer_list           go to state 241
    designation                go to state 242
    designator_list            go to state 243
    designator                 go to state 244


State 149

  161 initializer: assignment_expression .

    $default  reduce using rule 161 (initializer)


State 150

   95 init_declarator: declarator EQUALS initializer .

    $default  reduce using rule 95 (init_declarator)


State 151

  207 function_definition: declaration_specifiers declarator CT compound_statement .

    $default  reduce using rule 207 (function_definition)


State 152

  206 function_definition: declaration_specifiers declarator declaration_list CT . compound_statement

    LEFT_CURLY  shift, and go to state 52

    compound_statement  go to state 245


State 153

  179 labeled_statement: IDENTIFIER COLON . statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 246
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 154

  199 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 199 (jump_statement)


State 155

  200 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 200 (jump_statement)


State 156

   80 expression: expression . COMMA assignment_expression
  201 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 247
    COMMA      shift, and go to state 216


State 157

   32 cast_expression: unary_expression .

    $default  reduce using rule 32 (cast_expression)


State 158

   81 constant_expression: conditional_expression .

    $default  reduce using rule 81 (constant_expression)


State 159

  180 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 248


State 160

  195 iteration_statement: FOR LEFT_ROUND . expression_statement M expression_statement RIGHT_ROUND M statement
  196                    | FOR LEFT_ROUND . expression_statement M expression_statement M expression N RIGHT_ROUND M statement

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    expression_statement       go to state 249


State 161

  193 iteration_statement: WHILE M . LEFT_ROUND expression RIGHT_ROUND M statement

    LEFT_ROUND  shift, and go to state 250


State 162

  197 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 251


State 163

    4 primary_expression: LEFT_ROUND . expression RIGHT_ROUND
   16 postfix_expression: LEFT_ROUND . type_name RIGHT_ROUND LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND . type_name RIGHT_ROUND LEFT_CURLY initializer_list COMMA RIGHT_CURLY
   25 unary_expression: SIZEOF LEFT_ROUND . type_name RIGHT_ROUND

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    ENUM             shift, and go to state 3
    RESTRICT         shift, and go to state 4
    UNSIGNED         shift, and go to state 5
    VOID             shift, and go to state 7
    FLOAT            shift, and go to state 8
    SHORT            shift, and go to state 9
    VOLATILE         shift, and go to state 10
    CHAR             shift, and go to state 11
    SIGNED           shift, and go to state 12
    CONST            shift, and go to state 13
    SIZEOF           shift, and go to state 85
    BOOL             shift, and go to state 14
    COMPLEX          shift, and go to state 16
    IMAGINARY        shift, and go to state 18
    INT              shift, and go to state 19
    DOUBLE           shift, and go to state 20
    LONG             shift, and go to state 21
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 170
    type_specifier             go to state 171
    specifier_qualifier_list   go to state 172
    enum_specifier             go to state 29
    type_qualifier             go to state 173
    type_name                  go to state 252


State 164

   24 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 165

  198 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 198 (jump_statement)


State 166

  190 selection_statement: IF LEFT_ROUND . expression N RIGHT_ROUND M statement N
  191                    | IF LEFT_ROUND . expression N RIGHT_ROUND M statement N ELSE M statement

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 253


State 167

  181 labeled_statement: DEFAULT COLON . statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 254
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 168

  194 iteration_statement: DO M . statement M WHILE LEFT_ROUND expression RIGHT_ROUND SEMICOLON

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 255
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 169

  192 selection_statement: SWITCH LEFT_ROUND . expression RIGHT_ROUND statement

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 256


State 170

    4 primary_expression: LEFT_ROUND expression . RIGHT_ROUND
   80 expression: expression . COMMA assignment_expression

    RIGHT_ROUND  shift, and go to state 257
    COMMA        shift, and go to state 216


State 171

  113 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  114                         | type_specifier .

    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 16
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21

    $default  reduce using rule 114 (specifier_qualifier_list)

    type_specifier            go to state 171
    specifier_qualifier_list  go to state 258
    enum_specifier            go to state 29
    type_qualifier            go to state 173


State 172

  160 type_name: specifier_qualifier_list .

    $default  reduce using rule 160 (type_name)


State 173

  115 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  116                         | type_qualifier .

    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    COMPLEX    shift, and go to state 16
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21

    $default  reduce using rule 116 (specifier_qualifier_list)

    type_specifier            go to state 171
    specifier_qualifier_list  go to state 259
    enum_specifier            go to state 29
    type_qualifier            go to state 173


State 174

   16 postfix_expression: LEFT_ROUND type_name . RIGHT_ROUND LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND type_name . RIGHT_ROUND LEFT_CURLY initializer_list COMMA RIGHT_CURLY
   33 cast_expression: LEFT_ROUND type_name . RIGHT_ROUND cast_expression

    RIGHT_ROUND  shift, and go to state 260


State 175

    4 primary_expression: LEFT_ROUND . expression RIGHT_ROUND
   16 postfix_expression: LEFT_ROUND . type_name RIGHT_ROUND LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND . type_name RIGHT_ROUND LEFT_CURLY initializer_list COMMA RIGHT_CURLY

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    ENUM             shift, and go to state 3
    RESTRICT         shift, and go to state 4
    UNSIGNED         shift, and go to state 5
    VOID             shift, and go to state 7
    FLOAT            shift, and go to state 8
    SHORT            shift, and go to state 9
    VOLATILE         shift, and go to state 10
    CHAR             shift, and go to state 11
    SIGNED           shift, and go to state 12
    CONST            shift, and go to state 13
    SIZEOF           shift, and go to state 85
    BOOL             shift, and go to state 14
    COMPLEX          shift, and go to state 16
    IMAGINARY        shift, and go to state 18
    INT              shift, and go to state 19
    DOUBLE           shift, and go to state 20
    LONG             shift, and go to state 21
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 170
    type_specifier             go to state 171
    specifier_qualifier_list   go to state 172
    enum_specifier             go to state 29
    type_qualifier             go to state 173
    type_name                  go to state 261


State 176

   21 unary_expression: INCREMENT_OP unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 177

   22 unary_expression: DECREMENT_OP unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 178

    9 postfix_expression: postfix_expression LEFT_SQUARE . expression RIGHT_SQUARE

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 262


State 179

   10 postfix_expression: postfix_expression LEFT_ROUND . argument_expression_list RIGHT_ROUND
   11                   | postfix_expression LEFT_ROUND . RIGHT_ROUND

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    RIGHT_ROUND      shift, and go to state 263
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    argument_expression_list   go to state 264
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 265


State 180

   12 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 266


State 181

   13 postfix_expression: postfix_expression POINTER_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 267


State 182

   14 postfix_expression: postfix_expression INCREMENT_OP .

    $default  reduce using rule 14 (postfix_expression)


State 183

   15 postfix_expression: postfix_expression DECREMENT_OP .

    $default  reduce using rule 15 (postfix_expression)


State 184

   69 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 185

   70 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 186

   71 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 187

   72 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 188

   73 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 189

   74 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 190

   75 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 75 (assignment_operator)


State 191

   76 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 76 (assignment_operator)


State 192

   77 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 77 (assignment_operator)


State 193

   78 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 78 (assignment_operator)


State 194

   68 assignment_operator: EQUALS .

    $default  reduce using rule 68 (assignment_operator)


State 195

   67 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 268


State 196

   23 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 23 (unary_expression)


State 197

   35 multiplicative_expression: multiplicative_expression MUL . cast_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression  go to state 102
    CONSTANT            go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 157
    unary_operator      go to state 106
    cast_expression     go to state 269


State 198

   37 multiplicative_expression: multiplicative_expression MOD . cast_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression  go to state 102
    CONSTANT            go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 157
    unary_operator      go to state 106
    cast_expression     go to state 270


State 199

   36 multiplicative_expression: multiplicative_expression DIV . cast_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression  go to state 102
    CONSTANT            go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 157
    unary_operator      go to state 106
    cast_expression     go to state 271


State 200

   39 additive_expression: additive_expression ADD . multiplicative_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 272


State 201

   40 additive_expression: additive_expression SUB . multiplicative_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 273


State 202

   42 shift_expression: shift_expression LEFT_LOGICAL_OP . additive_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 274


State 203

   43 shift_expression: shift_expression RIGHT_LOGICAL_OP . additive_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 275


State 204

   47 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 276


State 205

   48 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 277


State 206

   45 relational_expression: relational_expression LT_OP . shift_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 278


State 207

   46 relational_expression: relational_expression GT_OP . shift_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 279


State 208

   50 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 280


State 209

   51 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 281


State 210

   53 and_expression: and_expression BIT_AND . equality_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 282


State 211

   55 exclusive_or_expression: exclusive_or_expression BIT_XOR . and_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 283


State 212

   57 inclusive_or_expression: inclusive_or_expression BIT_OR . exclusive_or_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 284


State 213

   59 logical_and_expression: logical_and_expression N . AND_LOGICAL_OP M inclusive_or_expression

    AND_LOGICAL_OP  shift, and go to state 285


State 214

   61 logical_or_expression: logical_or_expression N . OR_LOGICAL_OP M logical_and_expression
   65 conditional_expression: logical_or_expression N . QUES M expression N COLON M conditional_expression

    OR_LOGICAL_OP  shift, and go to state 286
    QUES           shift, and go to state 287


State 215

  189 expression_statement: expression SEMICOLON .

    $default  reduce using rule 189 (expression_statement)


State 216

   80 expression: expression COMMA . assignment_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 288


State 217

  183 compound_statement: LEFT_CURLY block_item_list RIGHT_CURLY .

    $default  reduce using rule 183 (compound_statement)


State 218

  185 block_item_list: block_item_list M . block_item

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    AUTO             shift, and go to state 2
    ENUM             shift, and go to state 3
    RESTRICT         shift, and go to state 4
    UNSIGNED         shift, and go to state 5
    BREAK            shift, and go to state 79
    EXTERN           shift, and go to state 6
    RETURN           shift, and go to state 80
    VOID             shift, and go to state 7
    CASE             shift, and go to state 81
    FLOAT            shift, and go to state 8
    SHORT            shift, and go to state 9
    VOLATILE         shift, and go to state 10
    CHAR             shift, and go to state 11
    FOR              shift, and go to state 82
    SIGNED           shift, and go to state 12
    WHILE            shift, and go to state 83
    CONST            shift, and go to state 13
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    BOOL             shift, and go to state 14
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    STATIC           shift, and go to state 15
    COMPLEX          shift, and go to state 16
    DEFAULT          shift, and go to state 88
    INLINE           shift, and go to state 17
    IMAGINARY        shift, and go to state 18
    DO               shift, and go to state 89
    INT              shift, and go to state 19
    SWITCH           shift, and go to state 90
    DOUBLE           shift, and go to state 20
    LONG             shift, and go to state 21
    REGISTER         shift, and go to state 22
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    declaration                go to state 121
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    statement                  go to state 122
    labeled_statement          go to state 123
    compound_statement         go to state 124
    block_item                 go to state 289
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 219

  140 direct_declarator: direct_declarator LEFT_SQUARE STATIC assignment_expression . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 290


State 220

  139 direct_declarator: direct_declarator LEFT_SQUARE STATIC type_qualifier_list . assignment_expression RIGHT_SQUARE
  151 type_qualifier_list: type_qualifier_list . type_qualifier

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    RESTRICT         shift, and go to state 4
    VOLATILE         shift, and go to state 10
    CONST            shift, and go to state 13
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 291
    type_qualifier             go to state 67


State 221

  141 direct_declarator: direct_declarator LEFT_SQUARE MUL RIGHT_SQUARE .

    $default  reduce using rule 141 (direct_declarator)


State 222

  136 direct_declarator: direct_declarator LEFT_SQUARE assignment_expression RIGHT_SQUARE .

    $default  reduce using rule 136 (direct_declarator)


State 223

  135 direct_declarator: direct_declarator LEFT_SQUARE type_qualifier_list RIGHT_SQUARE .

    $default  reduce using rule 135 (direct_declarator)


State 224

   27 unary_operator: MUL .
  138 direct_declarator: direct_declarator LEFT_SQUARE type_qualifier_list MUL . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 292

    $default  reduce using rule 27 (unary_operator)


State 225

  134 direct_declarator: direct_declarator LEFT_SQUARE type_qualifier_list assignment_expression . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 293


State 226

  144 direct_declarator: direct_declarator LEFT_ROUND CT RIGHT_ROUND .

    $default  reduce using rule 144 (direct_declarator)


State 227

  156 parameter_declaration: declaration_specifiers . declarator
  157                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 1
    LEFT_ROUND  shift, and go to state 23
    MUL         shift, and go to state 24

    $default  reduce using rule 157 (parameter_declaration)

    declarator         go to state 294
    direct_declarator  go to state 33
    pointer            go to state 34


State 228

  142 direct_declarator: direct_declarator LEFT_ROUND CT parameter_type_list . RIGHT_ROUND

    RIGHT_ROUND  shift, and go to state 295


State 229

  152 parameter_type_list: parameter_list .
  153                    | parameter_list . COMMA ELLIPSIS
  155 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 296

    $default  reduce using rule 152 (parameter_type_list)


State 230

  154 parameter_list: parameter_declaration .

    $default  reduce using rule 154 (parameter_list)


State 231

  143 direct_declarator: direct_declarator LEFT_ROUND identifier_list RIGHT_ROUND .

    $default  reduce using rule 143 (direct_declarator)


State 232

  159 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 297


State 233

  118 enum_specifier: ENUM IDENTIFIER LEFT_CURLY enumerator_list RIGHT_CURLY .

    $default  reduce using rule 118 (enum_specifier)


State 234

  120 enum_specifier: ENUM IDENTIFIER LEFT_CURLY enumerator_list COMMA . RIGHT_CURLY
  123 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER   shift, and go to state 63
    RIGHT_CURLY  shift, and go to state 298

    enumerator  go to state 237


State 235

  125 enumerator: IDENTIFIER EQUALS constant_expression .

    $default  reduce using rule 125 (enumerator)


State 236

  119 enum_specifier: ENUM LEFT_CURLY enumerator_list COMMA RIGHT_CURLY .

    $default  reduce using rule 119 (enum_specifier)


State 237

  123 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 123 (enumerator_list)


State 238

  171 designator: LEFT_SQUARE . constant_expression RIGHT_SQUARE

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 158
    constant_expression        go to state 299


State 239

  172 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 300


State 240

  164 initializer_list: initializer .

    $default  reduce using rule 164 (initializer_list)


State 241

  162 initializer: LEFT_CURLY initializer_list . RIGHT_CURLY
  163            | LEFT_CURLY initializer_list . COMMA RIGHT_CURLY
  166 initializer_list: initializer_list . COMMA initializer
  167                 | initializer_list . COMMA designation initializer

    RIGHT_CURLY  shift, and go to state 301
    COMMA        shift, and go to state 302


State 242

  165 initializer_list: designation . initializer

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 148
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 149
    initializer                go to state 303


State 243

  168 designation: designator_list . EQUALS
  170 designator_list: designator_list . designator

    LEFT_SQUARE  shift, and go to state 238
    DOT          shift, and go to state 239
    EQUALS       shift, and go to state 304

    designator  go to state 305


State 244

  169 designator_list: designator .

    $default  reduce using rule 169 (designator_list)


State 245

  206 function_definition: declaration_specifiers declarator declaration_list CT compound_statement .

    $default  reduce using rule 206 (function_definition)


State 246

  179 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 179 (labeled_statement)


State 247

  201 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 201 (jump_statement)


State 248

  180 labeled_statement: CASE constant_expression COLON . statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 306
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 249

  195 iteration_statement: FOR LEFT_ROUND expression_statement . M expression_statement RIGHT_ROUND M statement
  196                    | FOR LEFT_ROUND expression_statement . M expression_statement M expression N RIGHT_ROUND M statement

    $default  reduce using rule 62 (M)

    M  go to state 307


State 250

  193 iteration_statement: WHILE M LEFT_ROUND . expression RIGHT_ROUND M statement

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 308


State 251

  197 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 197 (jump_statement)


State 252

   16 postfix_expression: LEFT_ROUND type_name . RIGHT_ROUND LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND type_name . RIGHT_ROUND LEFT_CURLY initializer_list COMMA RIGHT_CURLY
   25 unary_expression: SIZEOF LEFT_ROUND type_name . RIGHT_ROUND

    RIGHT_ROUND  shift, and go to state 309


State 253

   80 expression: expression . COMMA assignment_expression
  190 selection_statement: IF LEFT_ROUND expression . N RIGHT_ROUND M statement N
  191                    | IF LEFT_ROUND expression . N RIGHT_ROUND M statement N ELSE M statement

    COMMA  shift, and go to state 216

    $default  reduce using rule 63 (N)

    N  go to state 310


State 254

  181 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 181 (labeled_statement)


State 255

  194 iteration_statement: DO M statement . M WHILE LEFT_ROUND expression RIGHT_ROUND SEMICOLON

    $default  reduce using rule 62 (M)

    M  go to state 311


State 256

   80 expression: expression . COMMA assignment_expression
  192 selection_statement: SWITCH LEFT_ROUND expression . RIGHT_ROUND statement

    RIGHT_ROUND  shift, and go to state 312
    COMMA        shift, and go to state 216


State 257

    4 primary_expression: LEFT_ROUND expression RIGHT_ROUND .

    $default  reduce using rule 4 (primary_expression)


State 258

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 259

  115 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 115 (specifier_qualifier_list)


State 260

   16 postfix_expression: LEFT_ROUND type_name RIGHT_ROUND . LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND type_name RIGHT_ROUND . LEFT_CURLY initializer_list COMMA RIGHT_CURLY
   33 cast_expression: LEFT_ROUND type_name RIGHT_ROUND . cast_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 313
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression  go to state 102
    CONSTANT            go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 157
    unary_operator      go to state 106
    cast_expression     go to state 314


State 261

   16 postfix_expression: LEFT_ROUND type_name . RIGHT_ROUND LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND type_name . RIGHT_ROUND LEFT_CURLY initializer_list COMMA RIGHT_CURLY

    RIGHT_ROUND  shift, and go to state 315


State 262

    9 postfix_expression: postfix_expression LEFT_SQUARE expression . RIGHT_SQUARE
   80 expression: expression . COMMA assignment_expression

    RIGHT_SQUARE  shift, and go to state 316
    COMMA         shift, and go to state 216


State 263

   11 postfix_expression: postfix_expression LEFT_ROUND RIGHT_ROUND .

    $default  reduce using rule 11 (postfix_expression)


State 264

   10 postfix_expression: postfix_expression LEFT_ROUND argument_expression_list . RIGHT_ROUND
   19 argument_expression_list: argument_expression_list . COMMA assignment_expression

    RIGHT_ROUND  shift, and go to state 317
    COMMA        shift, and go to state 318


State 265

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 266

   12 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 267

   13 postfix_expression: postfix_expression POINTER_OP IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 268

   67 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 67 (assignment_expression)


State 269

   35 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 270

   37 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 271

   36 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 272

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIV cast_expression
   37                          | multiplicative_expression . MOD cast_expression
   39 additive_expression: additive_expression ADD multiplicative_expression .

    MUL  shift, and go to state 197
    MOD  shift, and go to state 198
    DIV  shift, and go to state 199

    $default  reduce using rule 39 (additive_expression)


State 273

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIV cast_expression
   37                          | multiplicative_expression . MOD cast_expression
   40 additive_expression: additive_expression SUB multiplicative_expression .

    MUL  shift, and go to state 197
    MOD  shift, and go to state 198
    DIV  shift, and go to state 199

    $default  reduce using rule 40 (additive_expression)


State 274

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . SUB multiplicative_expression
   42 shift_expression: shift_expression LEFT_LOGICAL_OP additive_expression .

    ADD  shift, and go to state 200
    SUB  shift, and go to state 201

    $default  reduce using rule 42 (shift_expression)


State 275

   39 additive_expression: additive_expression . ADD multiplicative_expression
   40                    | additive_expression . SUB multiplicative_expression
   43 shift_expression: shift_expression RIGHT_LOGICAL_OP additive_expression .

    ADD  shift, and go to state 200
    SUB  shift, and go to state 201

    $default  reduce using rule 43 (shift_expression)


State 276

   42 shift_expression: shift_expression . LEFT_LOGICAL_OP additive_expression
   43                 | shift_expression . RIGHT_LOGICAL_OP additive_expression
   47 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_LOGICAL_OP   shift, and go to state 202
    RIGHT_LOGICAL_OP  shift, and go to state 203

    $default  reduce using rule 47 (relational_expression)


State 277

   42 shift_expression: shift_expression . LEFT_LOGICAL_OP additive_expression
   43                 | shift_expression . RIGHT_LOGICAL_OP additive_expression
   48 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_LOGICAL_OP   shift, and go to state 202
    RIGHT_LOGICAL_OP  shift, and go to state 203

    $default  reduce using rule 48 (relational_expression)


State 278

   42 shift_expression: shift_expression . LEFT_LOGICAL_OP additive_expression
   43                 | shift_expression . RIGHT_LOGICAL_OP additive_expression
   45 relational_expression: relational_expression LT_OP shift_expression .

    LEFT_LOGICAL_OP   shift, and go to state 202
    RIGHT_LOGICAL_OP  shift, and go to state 203

    $default  reduce using rule 45 (relational_expression)


State 279

   42 shift_expression: shift_expression . LEFT_LOGICAL_OP additive_expression
   43                 | shift_expression . RIGHT_LOGICAL_OP additive_expression
   46 relational_expression: relational_expression GT_OP shift_expression .

    LEFT_LOGICAL_OP   shift, and go to state 202
    RIGHT_LOGICAL_OP  shift, and go to state 203

    $default  reduce using rule 46 (relational_expression)


State 280

   45 relational_expression: relational_expression . LT_OP shift_expression
   46                      | relational_expression . GT_OP shift_expression
   47                      | relational_expression . LE_OP shift_expression
   48                      | relational_expression . GE_OP shift_expression
   50 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 204
    GE_OP  shift, and go to state 205
    LT_OP  shift, and go to state 206
    GT_OP  shift, and go to state 207

    $default  reduce using rule 50 (equality_expression)


State 281

   45 relational_expression: relational_expression . LT_OP shift_expression
   46                      | relational_expression . GT_OP shift_expression
   47                      | relational_expression . LE_OP shift_expression
   48                      | relational_expression . GE_OP shift_expression
   51 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 204
    GE_OP  shift, and go to state 205
    LT_OP  shift, and go to state 206
    GT_OP  shift, and go to state 207

    $default  reduce using rule 51 (equality_expression)


State 282

   50 equality_expression: equality_expression . EQ_OP relational_expression
   51                    | equality_expression . NE_OP relational_expression
   53 and_expression: and_expression BIT_AND equality_expression .

    EQ_OP  shift, and go to state 208
    NE_OP  shift, and go to state 209

    $default  reduce using rule 53 (and_expression)


State 283

   53 and_expression: and_expression . BIT_AND equality_expression
   55 exclusive_or_expression: exclusive_or_expression BIT_XOR and_expression .

    BIT_AND  shift, and go to state 210

    $default  reduce using rule 55 (exclusive_or_expression)


State 284

   55 exclusive_or_expression: exclusive_or_expression . BIT_XOR and_expression
   57 inclusive_or_expression: inclusive_or_expression BIT_OR exclusive_or_expression .

    BIT_XOR  shift, and go to state 211

    $default  reduce using rule 57 (inclusive_or_expression)


State 285

   59 logical_and_expression: logical_and_expression N AND_LOGICAL_OP . M inclusive_or_expression

    $default  reduce using rule 62 (M)

    M  go to state 319


State 286

   61 logical_or_expression: logical_or_expression N OR_LOGICAL_OP . M logical_and_expression

    $default  reduce using rule 62 (M)

    M  go to state 320


State 287

   65 conditional_expression: logical_or_expression N QUES . M expression N COLON M conditional_expression

    $default  reduce using rule 62 (M)

    M  go to state 321


State 288

   80 expression: expression COMMA assignment_expression .

    $default  reduce using rule 80 (expression)


State 289

  185 block_item_list: block_item_list M block_item .

    $default  reduce using rule 185 (block_item_list)


State 290

  140 direct_declarator: direct_declarator LEFT_SQUARE STATIC assignment_expression RIGHT_SQUARE .

    $default  reduce using rule 140 (direct_declarator)


State 291

  139 direct_declarator: direct_declarator LEFT_SQUARE STATIC type_qualifier_list assignment_expression . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 322


State 292

  138 direct_declarator: direct_declarator LEFT_SQUARE type_qualifier_list MUL RIGHT_SQUARE .

    $default  reduce using rule 138 (direct_declarator)


State 293

  134 direct_declarator: direct_declarator LEFT_SQUARE type_qualifier_list assignment_expression RIGHT_SQUARE .

    $default  reduce using rule 134 (direct_declarator)


State 294

  156 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 156 (parameter_declaration)


State 295

  142 direct_declarator: direct_declarator LEFT_ROUND CT parameter_type_list RIGHT_ROUND .

    $default  reduce using rule 142 (direct_declarator)


State 296

  153 parameter_type_list: parameter_list COMMA . ELLIPSIS
  155 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO       shift, and go to state 2
    ENUM       shift, and go to state 3
    RESTRICT   shift, and go to state 4
    UNSIGNED   shift, and go to state 5
    EXTERN     shift, and go to state 6
    VOID       shift, and go to state 7
    FLOAT      shift, and go to state 8
    SHORT      shift, and go to state 9
    VOLATILE   shift, and go to state 10
    CHAR       shift, and go to state 11
    SIGNED     shift, and go to state 12
    CONST      shift, and go to state 13
    BOOL       shift, and go to state 14
    STATIC     shift, and go to state 15
    COMPLEX    shift, and go to state 16
    INLINE     shift, and go to state 17
    IMAGINARY  shift, and go to state 18
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    LONG       shift, and go to state 21
    REGISTER   shift, and go to state 22
    ELLIPSIS   shift, and go to state 323

    declaration_specifiers   go to state 227
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_declaration    go to state 324


State 297

  159 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 159 (identifier_list)


State 298

  120 enum_specifier: ENUM IDENTIFIER LEFT_CURLY enumerator_list COMMA RIGHT_CURLY .

    $default  reduce using rule 120 (enum_specifier)


State 299

  171 designator: LEFT_SQUARE constant_expression . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 325


State 300

  172 designator: DOT IDENTIFIER .

    $default  reduce using rule 172 (designator)


State 301

  162 initializer: LEFT_CURLY initializer_list RIGHT_CURLY .

    $default  reduce using rule 162 (initializer)


State 302

  163 initializer: LEFT_CURLY initializer_list COMMA . RIGHT_CURLY
  166 initializer_list: initializer_list COMMA . initializer
  167                 | initializer_list COMMA . designation initializer

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_SQUARE      shift, and go to state 238
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 148
    RIGHT_CURLY      shift, and go to state 326
    DOT              shift, and go to state 239
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 149
    initializer                go to state 327
    designation                go to state 328
    designator_list            go to state 243
    designator                 go to state 244


State 303

  165 initializer_list: designation initializer .

    $default  reduce using rule 165 (initializer_list)


State 304

  168 designation: designator_list EQUALS .

    $default  reduce using rule 168 (designation)


State 305

  170 designator_list: designator_list designator .

    $default  reduce using rule 170 (designator_list)


State 306

  180 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 180 (labeled_statement)


State 307

  195 iteration_statement: FOR LEFT_ROUND expression_statement M . expression_statement RIGHT_ROUND M statement
  196                    | FOR LEFT_ROUND expression_statement M . expression_statement M expression N RIGHT_ROUND M statement

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    expression_statement       go to state 329


State 308

   80 expression: expression . COMMA assignment_expression
  193 iteration_statement: WHILE M LEFT_ROUND expression . RIGHT_ROUND M statement

    RIGHT_ROUND  shift, and go to state 330
    COMMA        shift, and go to state 216


State 309

   16 postfix_expression: LEFT_ROUND type_name RIGHT_ROUND . LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND type_name RIGHT_ROUND . LEFT_CURLY initializer_list COMMA RIGHT_CURLY
   25 unary_expression: SIZEOF LEFT_ROUND type_name RIGHT_ROUND .

    LEFT_CURLY  shift, and go to state 313

    $default  reduce using rule 25 (unary_expression)


State 310

  190 selection_statement: IF LEFT_ROUND expression N . RIGHT_ROUND M statement N
  191                    | IF LEFT_ROUND expression N . RIGHT_ROUND M statement N ELSE M statement

    RIGHT_ROUND  shift, and go to state 331


State 311

  194 iteration_statement: DO M statement M . WHILE LEFT_ROUND expression RIGHT_ROUND SEMICOLON

    WHILE  shift, and go to state 332


State 312

  192 selection_statement: SWITCH LEFT_ROUND expression RIGHT_ROUND . statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 333
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 313

   16 postfix_expression: LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY . initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY . initializer_list COMMA RIGHT_CURLY

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_SQUARE      shift, and go to state 238
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 148
    DOT              shift, and go to state 239
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 149
    initializer                go to state 240
    initializer_list           go to state 334
    designation                go to state 242
    designator_list            go to state 243
    designator                 go to state 244


State 314

   33 cast_expression: LEFT_ROUND type_name RIGHT_ROUND cast_expression .

    $default  reduce using rule 33 (cast_expression)


State 315

   16 postfix_expression: LEFT_ROUND type_name RIGHT_ROUND . LEFT_CURLY initializer_list RIGHT_CURLY
   17                   | LEFT_ROUND type_name RIGHT_ROUND . LEFT_CURLY initializer_list COMMA RIGHT_CURLY

    LEFT_CURLY  shift, and go to state 313


State 316

    9 postfix_expression: postfix_expression LEFT_SQUARE expression RIGHT_SQUARE .

    $default  reduce using rule 9 (postfix_expression)


State 317

   10 postfix_expression: postfix_expression LEFT_ROUND argument_expression_list RIGHT_ROUND .

    $default  reduce using rule 10 (postfix_expression)


State 318

   19 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 335


State 319

   59 logical_and_expression: logical_and_expression N AND_LOGICAL_OP M . inclusive_or_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 336


State 320

   61 logical_or_expression: logical_or_expression N OR_LOGICAL_OP M . logical_and_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 337


State 321

   65 conditional_expression: logical_or_expression N QUES M . expression N COLON M conditional_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 338


State 322

  139 direct_declarator: direct_declarator LEFT_SQUARE STATIC type_qualifier_list assignment_expression RIGHT_SQUARE .

    $default  reduce using rule 139 (direct_declarator)


State 323

  153 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 153 (parameter_type_list)


State 324

  155 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 155 (parameter_list)


State 325

  171 designator: LEFT_SQUARE constant_expression RIGHT_SQUARE .

    $default  reduce using rule 171 (designator)


State 326

  163 initializer: LEFT_CURLY initializer_list COMMA RIGHT_CURLY .

    $default  reduce using rule 163 (initializer)


State 327

  166 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 166 (initializer_list)


State 328

  167 initializer_list: initializer_list COMMA designation . initializer

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 148
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 149
    initializer                go to state 339


State 329

  195 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement . RIGHT_ROUND M statement
  196                    | FOR LEFT_ROUND expression_statement M expression_statement . M expression N RIGHT_ROUND M statement

    RIGHT_ROUND  shift, and go to state 340

    $default  reduce using rule 62 (M)

    M  go to state 341


State 330

  193 iteration_statement: WHILE M LEFT_ROUND expression RIGHT_ROUND . M statement

    $default  reduce using rule 62 (M)

    M  go to state 342


State 331

  190 selection_statement: IF LEFT_ROUND expression N RIGHT_ROUND . M statement N
  191                    | IF LEFT_ROUND expression N RIGHT_ROUND . M statement N ELSE M statement

    $default  reduce using rule 62 (M)

    M  go to state 343


State 332

  194 iteration_statement: DO M statement M WHILE . LEFT_ROUND expression RIGHT_ROUND SEMICOLON

    LEFT_ROUND  shift, and go to state 344


State 333

  192 selection_statement: SWITCH LEFT_ROUND expression RIGHT_ROUND statement .

    $default  reduce using rule 192 (selection_statement)


State 334

   16 postfix_expression: LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY initializer_list . RIGHT_CURLY
   17                   | LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY initializer_list . COMMA RIGHT_CURLY
  166 initializer_list: initializer_list . COMMA initializer
  167                 | initializer_list . COMMA designation initializer

    RIGHT_CURLY  shift, and go to state 345
    COMMA        shift, and go to state 346


State 335

   19 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 336

   57 inclusive_or_expression: inclusive_or_expression . BIT_OR exclusive_or_expression
   59 logical_and_expression: logical_and_expression N AND_LOGICAL_OP M inclusive_or_expression .

    BIT_OR  shift, and go to state 212

    $default  reduce using rule 59 (logical_and_expression)


State 337

   59 logical_and_expression: logical_and_expression . N AND_LOGICAL_OP M inclusive_or_expression
   61 logical_or_expression: logical_or_expression N OR_LOGICAL_OP M logical_and_expression .

    AND_LOGICAL_OP  reduce using rule 63 (N)
    $default        reduce using rule 61 (logical_or_expression)

    N  go to state 213


State 338

   65 conditional_expression: logical_or_expression N QUES M expression . N COLON M conditional_expression
   80 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 216

    $default  reduce using rule 63 (N)

    N  go to state 347


State 339

  167 initializer_list: initializer_list COMMA designation initializer .

    $default  reduce using rule 167 (initializer_list)


State 340

  195 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement RIGHT_ROUND . M statement

    $default  reduce using rule 62 (M)

    M  go to state 348


State 341

  196 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement M . expression N RIGHT_ROUND M statement

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 349


State 342

  193 iteration_statement: WHILE M LEFT_ROUND expression RIGHT_ROUND M . statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 350
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 343

  190 selection_statement: IF LEFT_ROUND expression N RIGHT_ROUND M . statement N
  191                    | IF LEFT_ROUND expression N RIGHT_ROUND M . statement N ELSE M statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 351
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 344

  194 iteration_statement: DO M statement M WHILE LEFT_ROUND . expression RIGHT_ROUND SEMICOLON

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 352


State 345

   16 postfix_expression: LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY initializer_list RIGHT_CURLY .

    $default  reduce using rule 16 (postfix_expression)


State 346

   17 postfix_expression: LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY initializer_list COMMA . RIGHT_CURLY
  166 initializer_list: initializer_list COMMA . initializer
  167                 | initializer_list COMMA . designation initializer

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_SQUARE      shift, and go to state 238
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 148
    RIGHT_CURLY      shift, and go to state 353
    DOT              shift, and go to state 239
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 149
    initializer                go to state 327
    designation                go to state 328
    designator_list            go to state 243
    designator                 go to state 244


State 347

   65 conditional_expression: logical_or_expression N QUES M expression N . COLON M conditional_expression

    COLON  shift, and go to state 354


State 348

  195 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement RIGHT_ROUND M . statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 355
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 349

   80 expression: expression . COMMA assignment_expression
  196 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement M expression . N RIGHT_ROUND M statement

    COMMA  shift, and go to state 216

    $default  reduce using rule 63 (N)

    N  go to state 356


State 350

  193 iteration_statement: WHILE M LEFT_ROUND expression RIGHT_ROUND M statement .

    $default  reduce using rule 193 (iteration_statement)


State 351

  190 selection_statement: IF LEFT_ROUND expression N RIGHT_ROUND M statement . N
  191                    | IF LEFT_ROUND expression N RIGHT_ROUND M statement . N ELSE M statement

    $default  reduce using rule 63 (N)

    N  go to state 357


State 352

   80 expression: expression . COMMA assignment_expression
  194 iteration_statement: DO M statement M WHILE LEFT_ROUND expression . RIGHT_ROUND SEMICOLON

    RIGHT_ROUND  shift, and go to state 358
    COMMA        shift, and go to state 216


State 353

   17 postfix_expression: LEFT_ROUND type_name RIGHT_ROUND LEFT_CURLY initializer_list COMMA RIGHT_CURLY .

    $default  reduce using rule 17 (postfix_expression)


State 354

   65 conditional_expression: logical_or_expression N QUES M expression N COLON . M conditional_expression

    $default  reduce using rule 62 (M)

    M  go to state 359


State 355

  195 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement RIGHT_ROUND M statement .

    $default  reduce using rule 195 (iteration_statement)


State 356

  196 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement M expression N . RIGHT_ROUND M statement

    RIGHT_ROUND  shift, and go to state 360


State 357

  190 selection_statement: IF LEFT_ROUND expression N RIGHT_ROUND M statement N .
  191                    | IF LEFT_ROUND expression N RIGHT_ROUND M statement N . ELSE M statement

    ELSE  shift, and go to state 361

    $default  reduce using rule 190 (selection_statement)


State 358

  194 iteration_statement: DO M statement M WHILE LEFT_ROUND expression RIGHT_ROUND . SEMICOLON

    SEMICOLON  shift, and go to state 362


State 359

   65 conditional_expression: logical_or_expression N QUES M expression N COLON M . conditional_expression

    IDENTIFIER       shift, and go to state 134
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    SIZEOF           shift, and go to state 85
    LEFT_ROUND       shift, and go to state 91
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 157
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 363


State 360

  196 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement M expression N RIGHT_ROUND . M statement

    $default  reduce using rule 62 (M)

    M  go to state 364


State 361

  191 selection_statement: IF LEFT_ROUND expression N RIGHT_ROUND M statement N ELSE . M statement

    $default  reduce using rule 62 (M)

    M  go to state 365


State 362

  194 iteration_statement: DO M statement M WHILE LEFT_ROUND expression RIGHT_ROUND SEMICOLON .

    $default  reduce using rule 194 (iteration_statement)


State 363

   65 conditional_expression: logical_or_expression N QUES M expression N COLON M conditional_expression .

    $default  reduce using rule 65 (conditional_expression)


State 364

  196 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement M expression N RIGHT_ROUND M . statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 366
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 365

  191 selection_statement: IF LEFT_ROUND expression N RIGHT_ROUND M statement N ELSE M . statement

    IDENTIFIER       shift, and go to state 74
    INTEGER_CONST    shift, and go to state 75
    FLOATING_CONST   shift, and go to state 76
    CHARACTER_CONST  shift, and go to state 77
    STRING_LITERALS  shift, and go to state 78
    BREAK            shift, and go to state 79
    RETURN           shift, and go to state 80
    CASE             shift, and go to state 81
    FOR              shift, and go to state 82
    WHILE            shift, and go to state 83
    GOTO             shift, and go to state 84
    SIZEOF           shift, and go to state 85
    CONTINUE         shift, and go to state 86
    IF               shift, and go to state 87
    DEFAULT          shift, and go to state 88
    DO               shift, and go to state 89
    SWITCH           shift, and go to state 90
    LEFT_ROUND       shift, and go to state 91
    LEFT_CURLY       shift, and go to state 52
    INCREMENT_OP     shift, and go to state 93
    DECREMENT_OP     shift, and go to state 94
    ADD              shift, and go to state 95
    SUB              shift, and go to state 96
    MUL              shift, and go to state 97
    NEG              shift, and go to state 98
    BIT_AND          shift, and go to state 99
    EXCL             shift, and go to state 100
    SEMICOLON        shift, and go to state 101

    primary_expression         go to state 102
    CONSTANT                   go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    expression                 go to state 120
    statement                  go to state 367
    labeled_statement          go to state 123
    compound_statement         go to state 124
    expression_statement       go to state 127
    selection_statement        go to state 128
    iteration_statement        go to state 129
    jump_statement             go to state 130


State 366

  196 iteration_statement: FOR LEFT_ROUND expression_statement M expression_statement M expression N RIGHT_ROUND M statement .

    $default  reduce using rule 196 (iteration_statement)


State 367

  191 selection_statement: IF LEFT_ROUND expression N RIGHT_ROUND M statement N ELSE M statement .

    $default  reduce using rule 191 (selection_statement)
